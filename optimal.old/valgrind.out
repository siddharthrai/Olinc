==17960== Memcheck, a memory error detector
==17960== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==17960== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==17960== Command: ./cache-sim mem-trace.trc.gz 2 32
==17960== 
==17960== Conditional jump or move depends on uninitialised value(s)
==17960==    at 0x4E3B4E0: inflateReset2 (in /lib/x86_64-linux-gnu/libz.so.1.2.3.4)
==17960==    by 0x4E3B5D8: inflateInit2_ (in /lib/x86_64-linux-gnu/libz.so.1.2.3.4)
==17960==    by 0x4E35323: ??? (in /lib/x86_64-linux-gnu/libz.so.1.2.3.4)
==17960==    by 0x40781A: gzfilebuf::open(char const*, int) (zfstream.cpp:82)
==17960==    by 0x407C2C: gzfilestream_common::open(char const*, int) (zfstream.cpp:492)
==17960==    by 0x405B03: main (cache-sim.cpp:1431)
==17960== 
==17960== Conditional jump or move depends on uninitialised value(s)
==17960==    at 0x40446C: cachesim_match(cachesim_cache*, unsigned long) (cache-sim.cpp:850)
==17960==    by 0x404F71: cachesim_incl_cache(cachesim_cache*, unsigned long, unsigned long) (cache-sim.cpp:1131)
==17960==    by 0x405D12: main (cache-sim.cpp:1501)
==17960== 
==17960== Conditional jump or move depends on uninitialised value(s)
==17960==    at 0x4047CA: cachesim_lru_replace_or_add(cachesim_cache*, unsigned long, unsigned long) (cache-sim.cpp:995)
==17960==    by 0x405076: cachesim_incl_cache(cachesim_cache*, unsigned long, unsigned long) (cache-sim.cpp:1168)
==17960==    by 0x405D12: main (cache-sim.cpp:1501)
==17960== 
==17960== Use of uninitialised value of size 8
==17960==    at 0x4047E6: cachesim_lru_replace_or_add(cachesim_cache*, unsigned long, unsigned long) (cache-sim.cpp:997)
==17960==    by 0x405076: cachesim_incl_cache(cachesim_cache*, unsigned long, unsigned long) (cache-sim.cpp:1168)
==17960==    by 0x405D12: main (cache-sim.cpp:1501)
==17960== 
==17960== Use of uninitialised value of size 8
==17960==    at 0x404824: cachesim_lru_replace_or_add(cachesim_cache*, unsigned long, unsigned long) (cache-sim.cpp:998)
==17960==    by 0x405076: cachesim_incl_cache(cachesim_cache*, unsigned long, unsigned long) (cache-sim.cpp:1168)
==17960==    by 0x405D12: main (cache-sim.cpp:1501)
==17960== 
==17960== Use of uninitialised value of size 8
==17960==    at 0x404848: cachesim_lru_replace_or_add(cachesim_cache*, unsigned long, unsigned long) (cache-sim.cpp:999)
==17960==    by 0x405076: cachesim_incl_cache(cachesim_cache*, unsigned long, unsigned long) (cache-sim.cpp:1168)
==17960==    by 0x405D12: main (cache-sim.cpp:1501)
==17960== 
==17960== Conditional jump or move depends on uninitialised value(s)
==17960==    at 0x40485B: cachesim_lru_replace_or_add(cachesim_cache*, unsigned long, unsigned long) (cache-sim.cpp:1001)
==17960==    by 0x405076: cachesim_incl_cache(cachesim_cache*, unsigned long, unsigned long) (cache-sim.cpp:1168)
==17960==    by 0x405D12: main (cache-sim.cpp:1501)
==17960== 
==17960== Use of uninitialised value of size 8
==17960==    at 0x404884: cachesim_lru_replace_or_add(cachesim_cache*, unsigned long, unsigned long) (cache-sim.cpp:1003)
==17960==    by 0x405076: cachesim_incl_cache(cachesim_cache*, unsigned long, unsigned long) (cache-sim.cpp:1168)
==17960==    by 0x405D12: main (cache-sim.cpp:1501)
==17960== 
==17960== Conditional jump or move depends on uninitialised value(s)
==17960==    at 0x4048B6: cachesim_lru_replace_or_add(cachesim_cache*, unsigned long, unsigned long) (cache-sim.cpp:1006)
==17960==    by 0x405076: cachesim_incl_cache(cachesim_cache*, unsigned long, unsigned long) (cache-sim.cpp:1168)
==17960==    by 0x405D12: main (cache-sim.cpp:1501)
==17960== 
==17960== Conditional jump or move depends on uninitialised value(s)
==17960==    at 0x404E63: cachesim_make_mru(cachesim_cache*, unsigned long, long) (cache-sim.cpp:1098)
==17960==    by 0x405091: cachesim_incl_cache(cachesim_cache*, unsigned long, unsigned long) (cache-sim.cpp:1177)
==17960==    by 0x405D12: main (cache-sim.cpp:1501)
==17960== 
==17960== Conditional jump or move depends on uninitialised value(s)
==17960==    at 0x404A08: cachesim_lru_replace_or_add(cachesim_cache*, unsigned long, unsigned long) (cache-sim.cpp:1018)
==17960==    by 0x405076: cachesim_incl_cache(cachesim_cache*, unsigned long, unsigned long) (cache-sim.cpp:1168)
==17960==    by 0x405D12: main (cache-sim.cpp:1501)
==17960== 
==17960== Conditional jump or move depends on uninitialised value(s)
==17960==    at 0x404A96: cachesim_lru_replace_or_add(cachesim_cache*, unsigned long, unsigned long) (cache-sim.cpp:1030)
==17960==    by 0x405076: cachesim_incl_cache(cachesim_cache*, unsigned long, unsigned long) (cache-sim.cpp:1168)
==17960==    by 0x405D12: main (cache-sim.cpp:1501)
==17960== 
==17960== 
==17960== More than 10000000 total errors detected.  I'm not reporting any more.
==17960== Final error counts will be inaccurate.  Go fix your program!
==17960== Rerun with --error-limit=no to disable this cutoff.  Note
==17960== that errors may occur in your program without prior warning from
==17960== Valgrind, because errors are no longer being displayed.
==17960== 
==17960== 
==17960== HEAP SUMMARY:
==17960==     in use at exit: 49,168 bytes in 3 blocks
==17960==   total heap usage: 101,397 allocs, 101,394 frees, 6,659,618 bytes allocated
==17960== 
==17960== LEAK SUMMARY:
==17960==    definitely lost: 24,592 bytes in 2 blocks
==17960==    indirectly lost: 0 bytes in 0 blocks
==17960==      possibly lost: 0 bytes in 0 blocks
==17960==    still reachable: 24,576 bytes in 1 blocks
==17960==         suppressed: 0 bytes in 0 blocks
==17960== Rerun with --leak-check=full to see details of leaked memory
==17960== 
==17960== For counts of detected and suppressed errors, rerun with: -v
==17960== Use --track-origins=yes to see where uninitialised values come from
==17960== ERROR SUMMARY: 10000000 errors from 12 contexts (suppressed: 2 from 2)
